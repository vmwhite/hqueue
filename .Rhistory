install.packages("devtools")
library(devtools)
load_all()
####### Parameters ranges <-  c(avg, min, max) #########
# Percentage of calls that are crisis calls
p <- list(0.0344,	0.0288,	0.039)
# Police Service Time (calls /hour)
mu_A <- list(0.582, 0.558, 0.654)
# Crisis Service Time (calls /hour)
mu_M <- list(0.588,	0.558,	0.618)
# Percentage of calls that require multiple response
n <- 	0.6019791
# average numer of cars in multiple response
avg_cars <-3.116467
# number of crisis servers - model only allows for one crisis server so we reduce the arrival rate and police vehicles by this much
s_M <- list(5,	15,	3)
# Arrival Rate (calls / hour)
lam <- list(33.798, 27.966, 41.052)
lam <- mapply("/",lam,s_M)
# number of police servers
s_T <- list(400, 300, 450)
s_T <- lapply(s_T, function(x) round(x  /(avg_cars*n + (1-n))))
s_T <- lapply(mapply("/",s_T,s_M), function(x) round(x))
N <- length(lam) * length(p) * length(mu_A) * length(mu_M) * length(s_T)
xy <- vector("list", ceiling(N)) # create an empty list into which values are to be filled
i <- 1
for(lambda in lam){
for(p12 in p){
for(mu_police in mu_A){
for(mu_crisis in mu_M){
for(s_police in s_T){
h_queue(s_police,lambda,p12,mu_police,mu_crisis)
xy[[i]] <- h_queue(s_police,lambda,p12,mu_police,mu_crisis)
i <- i + 1
}
}
}
}
}
h_queue(s_police,lambda,p12,mu_police,mu_crisis)
traceback()
h_queue(s_police,lambda,p12,mu_police,mu_crisis)
h_queue(s_police,lambda,p12,mu_police,mu_crisis)
loa``
load_all()
h_queue(s_police,lambda,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,lambda,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,lambda,p12,mu_police,mu_crisis)
h_queue10,lambda,p12,mu_police,mu_crisis)
h_queue(10,lambda,p12,mu_police,mu_crisis)
load_all()
h_queue(10,lambda,p12,mu_police,mu_crisis)
load_all()
h_queue(10,lambda,p12,mu_police,mu_crisis)
h_queue(5,2,.4,6,7)
check_system(lambda, P_1,mu_2,N)
check_system(lambda, p12,mu_crisis,s_police)
load_all()
h_queue(s_police,lambda,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,lambda,p12,mu_police,mu_crisis)
h_queue(s_police,1,p12,mu_police,mu_crisis)
h_queue(s_police,.02,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
load_all()
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(s_police,1,p12,mu_police,mu_crisis)
load_all()
h_queue(66,0.0417,p12,mu_police,mu_crisis)
0.0417/mu_police
load_all()
h_queue(66,0.0417,p12,mu_police,mu_crisis)
devtools::load_all(".")
devtools::load_all(".")
h_queue(66,0.0417,p12,mu_police,mu_crisis)
h_queue(66,0.0417,.2,10, 6
)
h_queue(66,0.0417,.2,5, 3
)
h_queue(66,0.0417,.2,.06, .5)
h_queue(66,0.0417,.2,.07, .5)
h_queue(66,0.0417,.2,1, .5)
h_queue(66,0.0417,.2,1,1)
